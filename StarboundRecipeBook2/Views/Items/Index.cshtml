@model List<Item>

@{ ViewData["Title"] = "Items"; }

<script src="~/scripts/itemsPage.js"></script>

<form id="searchForm">
    <div>
        Search by name: <input type="text" name="itemSearch" value="@ViewBag.itemSearch" />
    </div>
</form>

<table class="searchOptionsTable">
    <tr class="TableTitle">
        <th>Search Options</th>
        <th>Item Types</th>
    </tr>
    <tr>
        <td id="filterCheckboxContainer" />
        <td>
            <input type="checkbox" id="partialNameMatch" onclick='filterCheckboxTick(this)' /> Match name partially
            <br />
            <input type="radio" id="searchByDisplayedName" name="searchBy" onclick='searchByButtonClick(this)' /><t>Displayed Name</t>
            <br />
            <input type="radio" id="searchByInternalName" name="searchBy" onclick='searchByButtonClick(this)' /><t>Internal Name</t>
        </td>
    </tr>
    <tr>
        <td colspan="2">
            <input type="submit" value="Search" form="searchForm" style="width:100%" />
        </td>
    </tr>
</table>

@if (Model == null || Model.Count == 0)
{
    <div>Nothing to display.</div>
}
else
{
    @foreach (var item in Model)
    {
        <a asp-action="Item" asp-controller="Items" asp-route-itemId=@item.ID.ItemId asp-route-modId=@item.ID.SourceModId>
            <div class="itemDataContainer">
                @await Component.InvokeAsync("ItemReference", item)
            </div>
        </a>
    }
}
